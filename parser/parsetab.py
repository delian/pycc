
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "LET NAME NUMBERprogram : functions\n    | glob_variables ';' functions\n    glob_variables : glob_variable\n    | glob_variables ';' glob_variableglob_variable : NAME '=' expressionfunctions : function\n    | functions ';' functionfunction : NAME '(' ')' blockblock : '{' statements '}'\n    | '{' statements ';' '}'\n    | '{' '}'\n    statements : statement\n    | statements ';' statementstatement : var_declare\n    | var_assign\n    | function_call\n    | expression\n    var_declare : LET NAME\n    | LET NAME '=' expression\n    var_assign : NAME '=' expressionfunction_call : NAME '(' ')'expression : expression '+' term\n            | expression '-' term\n            | expression '+' function_call\n            | expression '-' function_call\n    term : term '*' factor\n         | term '/' factor\n         | term '*' function_call\n         | term '/' function_call\n    expression : termterm : factorfactor : NUMBERfactor : NAMEfactor : '(' expression ')'"
    
_lr_action_items = {'NAME':([0,7,8,10,22,24,25,26,27,28,37,51,53,57,],[6,12,15,17,17,38,41,41,46,46,52,38,17,17,]),'$end':([1,2,4,11,13,23,31,50,55,],[0,-1,-6,-7,-2,-8,-11,-9,-10,]),';':([2,3,4,5,11,13,14,17,18,19,20,21,23,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,55,56,58,59,60,],[7,8,-6,-3,-7,7,-4,-33,-5,-30,-31,-32,-8,51,-11,-12,-14,-15,-16,-17,-33,-22,-24,-33,-23,-25,-26,-28,-33,-27,-29,-34,-9,-18,-10,-13,-20,-21,-19,]),'(':([6,10,12,15,22,24,25,26,27,28,38,41,46,51,53,57,],[9,22,9,9,22,22,22,22,22,22,54,54,54,22,22,22,]),'=':([6,15,38,52,],[10,10,53,57,]),')':([9,17,19,20,21,29,39,40,41,42,43,44,45,46,47,48,49,54,59,],[16,-33,-30,-31,-32,49,-22,-24,-33,-23,-25,-26,-28,-33,-27,-29,-34,59,-21,]),'NUMBER':([10,22,24,25,26,27,28,51,53,57,],[21,21,21,21,21,21,21,21,21,21,]),'{':([16,],[24,]),'*':([17,19,20,21,38,39,41,42,44,45,46,47,48,49,59,],[-33,27,-31,-32,-33,27,-33,27,-26,-28,-33,-27,-29,-34,-21,]),'/':([17,19,20,21,38,39,41,42,44,45,46,47,48,49,59,],[-33,28,-31,-32,-33,28,-33,28,-26,-28,-33,-27,-29,-34,-21,]),'+':([17,18,19,20,21,29,36,38,39,40,41,42,43,44,45,46,47,48,49,58,59,60,],[-33,25,-30,-31,-32,25,25,-33,-22,-24,-33,-23,-25,-26,-28,-33,-27,-29,-34,25,-21,25,]),'-':([17,18,19,20,21,29,36,38,39,40,41,42,43,44,45,46,47,48,49,58,59,60,],[-33,26,-30,-31,-32,26,26,-33,-22,-24,-33,-23,-25,-26,-28,-33,-27,-29,-34,26,-21,26,]),'}':([17,19,20,21,24,30,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,51,52,56,58,59,60,],[-33,-30,-31,-32,31,50,-12,-14,-15,-16,-17,-33,-22,-24,-33,-23,-25,-26,-28,-33,-27,-29,-34,55,-18,-13,-20,-21,-19,]),'LET':([24,51,],[37,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'functions':([0,8,],[2,13,]),'glob_variables':([0,],[3,]),'function':([0,7,8,],[4,11,4,]),'glob_variable':([0,8,],[5,14,]),'expression':([10,22,24,51,53,57,],[18,29,36,36,58,60,]),'term':([10,22,24,25,26,51,53,57,],[19,19,19,39,42,19,19,19,]),'factor':([10,22,24,25,26,27,28,51,53,57,],[20,20,20,20,20,44,47,20,20,20,]),'block':([16,],[23,]),'statements':([24,],[30,]),'statement':([24,51,],[32,56,]),'var_declare':([24,51,],[33,33,]),'var_assign':([24,51,],[34,34,]),'function_call':([24,25,26,27,28,51,],[35,40,43,45,48,35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> functions','program',1,'p_program','__init__.py',26),
  ('program -> glob_variables ; functions','program',3,'p_program','__init__.py',27),
  ('glob_variables -> glob_variable','glob_variables',1,'p_glob_variables','__init__.py',33),
  ('glob_variables -> glob_variables ; glob_variable','glob_variables',3,'p_glob_variables','__init__.py',34),
  ('glob_variable -> NAME = expression','glob_variable',3,'p_glob_variable','__init__.py',42),
  ('functions -> function','functions',1,'p_functions','__init__.py',47),
  ('functions -> functions ; function','functions',3,'p_functions','__init__.py',48),
  ('function -> NAME ( ) block','function',4,'p_function','__init__.py',56),
  ('block -> { statements }','block',3,'p_block','__init__.py',61),
  ('block -> { statements ; }','block',4,'p_block','__init__.py',62),
  ('block -> { }','block',2,'p_block','__init__.py',63),
  ('statements -> statement','statements',1,'p_statements','__init__.py',72),
  ('statements -> statements ; statement','statements',3,'p_statements','__init__.py',73),
  ('statement -> var_declare','statement',1,'p_statement','__init__.py',81),
  ('statement -> var_assign','statement',1,'p_statement','__init__.py',82),
  ('statement -> function_call','statement',1,'p_statement','__init__.py',83),
  ('statement -> expression','statement',1,'p_statement','__init__.py',84),
  ('var_declare -> LET NAME','var_declare',2,'p_var_declare','__init__.py',90),
  ('var_declare -> LET NAME = expression','var_declare',4,'p_var_declare','__init__.py',91),
  ('var_assign -> NAME = expression','var_assign',3,'p_var_assign','__init__.py',97),
  ('function_call -> NAME ( )','function_call',3,'p_function_call','__init__.py',102),
  ('expression -> expression + term','expression',3,'p_expression','__init__.py',107),
  ('expression -> expression - term','expression',3,'p_expression','__init__.py',108),
  ('expression -> expression + function_call','expression',3,'p_expression','__init__.py',109),
  ('expression -> expression - function_call','expression',3,'p_expression','__init__.py',110),
  ('term -> term * factor','term',3,'p_expression','__init__.py',111),
  ('term -> term / factor','term',3,'p_expression','__init__.py',112),
  ('term -> term * function_call','term',3,'p_expression','__init__.py',113),
  ('term -> term / function_call','term',3,'p_expression','__init__.py',114),
  ('expression -> term','expression',1,'p_expression_term','__init__.py',128),
  ('term -> factor','term',1,'p_term_factor','__init__.py',133),
  ('factor -> NUMBER','factor',1,'p_factor_num','__init__.py',138),
  ('factor -> NAME','factor',1,'p_factor_variable','__init__.py',143),
  ('factor -> ( expression )','factor',3,'p_factor_expr','__init__.py',148),
]
